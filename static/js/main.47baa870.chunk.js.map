{"version":3,"sources":["components/ContentNav/ContentNav.js","services/api.js","components/CModal/CModal.js","components/withModal/withModal.js","components/withSpinner/withSpinner.js","components/CardOnList/CardOnList.js","utilities/queryConfig.js","components/Planets/Planets.js","components/People/People.js","components/Invalid.js","components/Update/Update.js","App.js","index.js"],"names":["ContentNav","page","useState","active","setActive","Nav","variant","className","activeKey","onSelect","eventKey","Item","Link","onClick","delayedFetch","url","sec","attr","undefined","Promise","resolve","reject","setTimeout","fetch","then","putId","a","id","console","log","method","body","results","json","getFake","getPeople","queryKey","api","getPlanets","CModal","type","msg","show","setShow","aria-live","aria-atomic","style","position","display","justifyContent","top","left","margin","minHeight","width","minWidth","Toast","onClose","transition","delay","autohide","Header","src","alt","Body","withModal","Component","status","withSpinner","btnType","Spinner","as","animation","CardOnList","title","data","Card","bg","map","key","idx","name","value","settings","retry","onSuccess","keepPreviousData","Planets","useQuery","queryConfig","field","population","climate","People","setPage","isPreviousData","goPage","direction","old","Math","max","Boolean","next","Pagination","Prev","disabled","previous","Next","eye_color","mass","birth_year","Invalid","Update","useMutation","mutate","isLoading","inputRef","useRef","Form","onSubmit","e","preventDefault","Number","current","Group","controlId","Label","Button","Badge","Control","ref","placeholder","size","queryClient","QueryClient","App","QueryClientProvider","client","Container","renderContent","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47baa870.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ContentNav.css\";\nimport { Nav } from \"react-bootstrap\";\n\nfunction ContentNav({ page }) {\n  const [active, setActive] = useState(\"planets\");\n\n  const handleSelect = (eventKey) => setActive(eventKey);\n\n  return (\n    <Nav\n      variant=\"pills\"\n      className=\"border-0 pb-2\"\n      activeKey={active}\n      onSelect={handleSelect}\n    >\n      <Nav.Item>\n        <Nav.Link\n          className=\"rounded-pill\"\n          eventKey=\"planets\"\n          onClick={() => page(\"planets\")}\n        >\n          Planets\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link\n          className=\"rounded-pill\"\n          eventKey=\"people\"\n          onClick={() => page(\"people\")}\n        >\n          People\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link\n          className=\"rounded-pill\"\n          eventKey=\"invalid\"\n          onClick={() => page(\"invalid\")}\n        >\n          Fake url\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link\n          className=\"rounded-pill\"\n          eventKey=\"update\"\n          onClick={() => page(\"update\")}\n        >\n          Update method\n        </Nav.Link>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default ContentNav;\n","function delayedFetch(url, sec = 0, attr = undefined) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      fetch(url, attr).then(resolve, reject);\n    }, sec * 1000);\n  });\n}\n\nconst putId = async (id = 1) => {\n  console.log(`id`, id);\n  const results = await delayedFetch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`,\n    1,\n    {\n      method: \"PUT\",\n      body: { id: id },\n    }\n  );\n  return results.json();\n};\n\nconst getFake = async () => {\n  const results = await delayedFetch(\"http://guuuuugle.com\", 0);\n\n  return results.json();\n};\n\nconst getPeople = async ({ queryKey }) => {\n  // console.log(`greeting`, queryKey[1]);\n  // console.log(`page`, queryKey[2]);\n  const page = queryKey[2];\n  const results = await delayedFetch(\n    `https://swapi.dev/api/people/${page ? `?page=${queryKey[2]}` : \"\"}`,\n\n    1\n  );\n\n  return results.json();\n};\nconst getAllPlanets = async () => {\n  const results = await delayedFetch(\"https://swapi.dev/api/planets/\", 1);\n\n  return results.json();\n};\n\nconst api = {\n  getPlanets: getAllPlanets,\n  getFake,\n  getPeople,\n  putId,\n};\nexport default api;\n","import React, { useState } from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\nfunction CModal({ type, msg }) {\n  const [show, setShow] = useState(true);\n  return (\n    show && (\n      <div\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        style={{\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          top: \"0\",\n          left: \"0\",\n          margin: \"10px 0\",\n          minHeight: \"200px\",\n          width: \"100vw\",\n        }}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            minWidth: \"300px\",\n          }}\n        >\n          <Toast\n            onClose={() => setShow(false)}\n            show={show}\n            transition={false}\n            delay={2000}\n            autohide\n            className=\"text-dark border-0\"\n          >\n            <Toast.Header className={`bg-${type} text-white`}>\n              <img\n                src=\"holder.js/20x20?text=%20\"\n                className=\"rounded mr-2\"\n                alt=\"\"\n              />\n              <strong className=\"mr-auto\">{type}</strong>\n            </Toast.Header>\n            <Toast.Body>\n              <strong>{msg}</strong>\n            </Toast.Body>\n          </Toast>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../CModal/CModal\";\n\nfunction withModal(Component, { status, type, msg }) {\n  return status === \"error\" ? <CModal type={type} msg={msg} /> : Component;\n}\n\nexport default withModal;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction withSpinner(Component, { status, type }) {\n  const btnType =\n    type === \"button\" ? \"spinner-border-sm ml-1\" : \"spinner-border d-block m-2\";\n\n  return status === \"loading\" ? (\n    <Spinner className={`${btnType}`} as=\"span\" animation=\"border\" />\n  ) : (\n    Component\n  );\n}\n\nexport default withSpinner;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nfunction CardOnList({ title, data }) {\n  return (\n    <Card className=\"my-2 text-dark border-0\" bg=\"info\">\n      <Card.Header as=\"h6\" className=\"text-white\">\n        {title}\n      </Card.Header>\n      <Card.Body className=\"bg-white\">\n        {data.map((key, idx) => (\n          <p key={idx}>\n            {key.name} - {key.value}\n          </p>\n        ))}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default CardOnList;\n","const settings = {\n  retry: 1,\n  // cacheTime: 1000,\n  onSuccess: () => console.log(\"Success!\"),\n  keepPreviousData: true,\n};\n\nexport default settings;\n","import React from \"react\";\nimport api from \"../../services/api\";\n\nimport { useQuery } from \"react-query\";\nimport withModal from \"../withModal/withModal\";\nimport withSpinner from \"../withSpinner/withSpinner\";\nimport CardOnList from \"../CardOnList/CardOnList\";\nimport queryConfig from \"../../utilities/queryConfig\";\n\nfunction Planets() {\n  const { data, status } = useQuery(\n    \"fetchPlanets\",\n    api.getPlanets,\n    queryConfig\n  );\n\n  return withModal(\n    withSpinner(\n      data?.results.map((field, idx) => (\n        <CardOnList\n          key={idx}\n          title={field.name}\n          data={[\n            {\n              name: \"population\",\n              value: field.population,\n            },\n            {\n              name: \"climate\",\n              value: field.climate,\n            },\n          ]}\n        />\n      )),\n      { status }\n    ),\n    { status, type: \"danger\", msg: \"Fetching error.\" }\n  );\n}\n\nexport default Planets;\n","import React, { useState } from \"react\";\nimport api from \"../../services/api\";\n\nimport { useQuery } from \"react-query\";\nimport withModal from \"../withModal/withModal\";\nimport withSpinner from \"../withSpinner/withSpinner\";\nimport CardOnList from \"../CardOnList/CardOnList\";\nimport queryConfig from \"../../utilities/queryConfig\";\nimport { Pagination } from \"react-bootstrap\";\n\nfunction People() {\n  const [page, setPage] = useState(1);\n  const { data, status, isPreviousData } = useQuery(\n    [\"fetchPeople\", \"hello from people\", page],\n    api.getPeople,\n    {\n      ...queryConfig,\n      onSuccess: () => console.log(`Success on People component`),\n    }\n  );\n  const goPage = (direction) => {\n    if (direction === \"prev\") setPage((old) => Math.max(old - 1, 1));\n    else setPage((old) => old + 1);\n  };\n  console.log(`isPreviousData`, isPreviousData);\n  console.log(`!Boolean(data?.next)`, !Boolean(data?.next));\n\n  return (\n    <>\n      <Pagination>\n        <Pagination.Prev\n          disabled={isPreviousData || !Boolean(data?.previous)}\n          onClick={() => goPage(\"prev\")}\n        />\n        <Pagination.Item>{page}</Pagination.Item>\n        <Pagination.Next\n          disabled={isPreviousData || !Boolean(data?.next)}\n          onClick={() => goPage(\"next\")}\n        />\n      </Pagination>\n      {withModal(\n        withSpinner(\n          data?.results?.map((field, idx) => (\n            <CardOnList\n              key={idx}\n              title={field.name}\n              data={[\n                {\n                  name: \"eye color\",\n                  value: field.eye_color,\n                },\n                {\n                  name: \"mass\",\n                  value: field.mass,\n                },\n                {\n                  name: \"birth year\",\n                  value: field.birth_year,\n                },\n              ]}\n            />\n          )),\n          { status: isPreviousData ? \"loading\" : status }\n        ),\n        {\n          status,\n          type: \"danger\",\n          msg: \"Fetching error.\",\n        }\n      )}\n    </>\n  );\n}\n\nexport default People;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport api from \"../services/api\";\nimport withModal from \"./withModal/withModal\";\nimport withSpinner from \"./withSpinner/withSpinner\";\nimport queryConfig from \"../utilities/queryConfig\";\n\nfunction Invalid() {\n  const { status } = useQuery(\"fetchFake\", api.getFake, queryConfig);\n\n  return withModal(withSpinner(<>Fake url</>, { status }), {\n    status,\n    type: \"danger\",\n    msg: \"Fetching error.\",\n  });\n}\n\nexport default Invalid;\n","import React, { useState, useRef } from \"react\";\nimport { Form, Button, Spinner, Badge } from \"react-bootstrap\";\nimport { useMutation } from \"react-query\";\nimport api from \"../../services/api\";\nimport withSpinner from \"../withSpinner/withSpinner\";\nfunction Update() {\n  const { mutate, data, isLoading } = useMutation(api.putId);\n  const inputRef = useRef();\n\n  const update = (e) => {\n    e.preventDefault(e);\n    mutate(Math.max(Number(inputRef.current.value), 1));\n  };\n\n  console.log(data);\n  console.log(isLoading);\n\n  return (\n    <div>\n      <Form onSubmit={update}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>\n            New Id\n            <Button variant=\"primary\">\n              Actual id from api:<Badge variant=\"light\">{data?.id}</Badge>\n            </Button>\n          </Form.Label>\n          {withSpinner(\n            <Form.Control ref={inputRef} type=\"text\" placeholder=\"New id\" />,\n            {\n              status: isLoading && \"loading\",\n            }\n          )}\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={isLoading}>\n          Update\n          {withSpinner(<></>, {\n            status: isLoading && \"loading\",\n            type: \"button\",\n          })}\n        </Button>\n      </Form>\n      <Button variant=\"primary\" disabled>\n        <Spinner as=\"span\" animation=\"border\" size=\"sm\" />\n        <span className=\"sr-only\">Loading...</span>\n      </Button>{\" \"}\n    </div>\n  );\n}\n\nexport default Update;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport ContentNav from \"./components/ContentNav/ContentNav\";\nimport Planets from \"./components/Planets/Planets\";\nimport People from \"./components/People/People\";\nimport { Container } from \"react-bootstrap\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Invalid from \"./components/Invalid\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport Update from \"./components/Update/Update\";\nconst queryClient = new QueryClient();\nfunction App() {\n  const [page, setPage] = useState(\"planets\");\n\n  const renderContent = (page) => {\n    switch (page) {\n      case \"planets\":\n        return <Planets />;\n      case \"people\":\n        return <People />;\n      case \"invalid\":\n        return <Invalid />;\n      case \"update\":\n        return <Update />;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Container className=\"text-light\">\n        <h1>Stars Wars</h1>\n        <ContentNav page={setPage} />\n        <div className=\"content position-static\">{renderContent(page)}</div>\n      </Container>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}